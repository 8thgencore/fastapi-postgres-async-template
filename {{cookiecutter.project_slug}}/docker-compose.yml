version: '3.9'

services:
  web:
    container_name: ${APP_CONTAINER_NAME:-{{cookiecutter.project_slug}}-app-container}
    build:
      context: ./src
      dockerfile: ./compose/local/Dockerfile
    command: /start
    restart: unless-stopped
    volumes:
      - ./src:/usr/src
    ports:
      - 8070:8000
    env_file:
      - .env
    depends_on:
      - db

  db:
    container_name: ${DB_CONTAINER_NAME:-{{cookiecutter.project_slug}}-db-container}
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASS:-postgres}
      - POSTGRES_DB=${DB_NAME:-db}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-server:
    container_name: ${REDIS_CONTAINER_NAME:-{{cookiecutter.project_slug}}-redis-container}
    image: "redis:alpine"
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    restart: unless-stopped
    ports:
      - 6379:6379
    env_file:
      - .env
    environment:
      - ALLOW_EMPTY_PASSWORD=no

volumes:
  postgres_data:
