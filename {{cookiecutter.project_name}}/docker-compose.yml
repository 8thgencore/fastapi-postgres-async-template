version: '3.9'

services:
  web:
    container_name: ${APP_CONTAINER_NAME:-{{cookiecutter.project_name}}-app-container}
    build:
      context: ./src
      dockerfile: ./compose/local/Dockerfile
    command: /start
    restart: unless-stopped
    volumes:
      - ./src:/usr/src
    ports:
      - 8070:8000
    env_file:
      - .env
    depends_on:
      - db

  db:
    container_name: ${DB_CONTAINER_NAME:-{{cookiecutter.project_name}}-db-container}
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose: 
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASS:-postgres}
      - POSTGRES_DB=${DB_NAME:-db}
    healthcheck:
      test: [ "CMD", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-server:
    container_name: ${REDIS_CONTAINER_NAME:-{{cookiecutter.project_name}}-redis-container}
    image: "redis:alpine"
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    restart: unless-stopped
    ports:
      - 6379:6379
    env_file:
      - .env
    environment:
      - ALLOW_EMPTY_PASSWORD=no

  pgadmin:
    container_name: ${PGADMIN_CONTAINER_NAME:-{{cookiecutter.project_name}}-pgadmin-container}
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@template.com
      PGADMIN_DEFAULT_PASSWORD: password_1337!
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin:
